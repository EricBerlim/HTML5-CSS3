-----------------------------------------------------
HTML5 e CSS3 - PARTE 3:
-----------------------------------------------------

GIT e GITHUB DESKTOP:

CRIAR REPOSITÓRIO:

No GitHub Desktop você pode criar um novo Repositório, preenchendo as informações abaixo:

Nome: pode ser igual ao da pasta. ex:HTML5-CSS3.

Descrição: Curso do Curso em Video

Local: tem que ser a pasta onde estão as sub-pastas

Marcar a opção de iniciar com o Read-me.

Git ignore: none

License: MIT License

Após criar, DESMARQUE a opção PRIVATE.

Caso a criação tenha sido feita private:
Vá no site GitHub -> Repositório -> Settings -> Vá para o fim da página -> Danger Zone -> Mudar para Repositório Público
-----------------------------------------------------

EXCLUIR REPOSITÓRIO:

A exclusão deve ser feita pelo GitHub Desktop.

Selecione o repositório -> Aba Repository -> Remove
-----------------------------------------------------

HOSPEDAR SITE com o GITHUB PAGES:

Abrir o Repositório desejado.

Clicar em Settings e ir até GitHub Pages.

Depois em Choose a theme e selecione um tema.

PRIMEIRA FORMA:

Crie um novo repositório no GitHub Desktop com o nome e as outras informações.

NÃO inicialize com o arquivo Read-me e deixe Público.

Copie e Cole os arquivos para essa nova pasta criada.

Depois altere o nome do arquivo Chrome para index.html e faça o Commit e Push.

Vá em Repositories no GitHub -> Selecione o Projeto 
-> Settings -> GitHub Pages -> Selecione Main Branch

Isso irá gerar um link que pode er acessado:
https://ericberlim.github.io/projeto-android/

SEGUNDA FORMA:

No GitHub Pages irá gerar um link como esse:
https://ericberlim.github.io/HTML5-CSS3/

Para acessar os exercícios deve inserir após a barra:
https://ericberlim.github.io/HTML5-CSS3/exercicios/001.index.html
-----------------------------------------------------

RECURSOS SOCIAIS do GITHUB:

Follow: para pessoas.
Estrela: para repositórios.
Issues: tópicos para buscar ajuda.
-----------------------------------------------------

COMO USAR GITHUB EM OUTRO PC:

Requisitos:

- VS Code
- Git
- GitHub Desktop

Abrir o GitHub Desktop -> File -> Options -> Accounts -> GitHub.com -> Logar -> File -> Options -> Git -> Clicar no campo Name e no E-mail -> Salvar

Selecione o Repositório -> Clique em Clonar -> Escolher a Pasta para armazenar -> PRONTO

PARA SAIR: Só com o GitHub Desktop aberto:

Aba Reposiry -> Remove -> Marcar a Caixa -> Remove -> File -> Options -> Sign Out -> Git -> Apagar Nome e E-mail -> Salvar -> Esvaziar a Lixeira -> PRONTO
-----------------------------------------------------

IMAGENS de FUNDO:

Inserir imagem de fundo:
background-image: url("imagens/wallpaper002.jpg");
    
Posicionamento da imagem:
background-position: center top;

Tenta mostrar 100% da imagem:
background-size: contain;

Cobre a janela inteira:
background-size: cover;

body{
    height: 100vh;
    background-color: black;
    background-image: url("imagens/wallpaper002.jpg");
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
}
main{
    background-color: white;
    max-width: 400px;
    padding: 10px;
    margin: auto;
    border: 2px solid darkblue;
    border-radius: 15px;
}

IMAGEM com VÍNCULO - ATTACHMENT:

Fundo rola junto com o conteúdo:
Padrão - background-attachment: scroll;

Fundo não rola junto:
background-attachment: fixed;

Para uma melhor experiência pode-se realizar a combinção do background-attachment: fixed com o background-size: cover.

body{
    height: 100vh;
    background-color: black;
    background-image: url("imagens/wallpaper002.jpg");
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
}
main{
    background-color: white;
    max-width: 400px;
    padding: 10px;
    margin: auto;
    text-align: justify;
    border: 2px solid darkblue;
    border-radius: 15px;
}
-----------------------------------------------------

SHORT-HANDS:

São formas de escrever o código de maneira reduzida, mas que cada uma possui uma ordem específica.

BACKGROUND:

Color - image - position - repeat - size - attachment

background: black url("imagens/...") center center no-repeat cover fixed;

Essa short-hand funciona, exceto com o size.
-----------------------------------------------------

ALINHAMENTO VERTICAL:

Para centralizar verticalmente, você deve ter a presença de um CONTEINER e de um CONTEÚDO.

Para alinhar um conteúdo, daria para fazer usando o comando margin: auto, mas para o vertical não.

Então para o alinhamento vertical deve ser feito da seguinte forma:

#container{
   position: relative; /*padrão*/
   height: 500px;
   padding: 10px;
   background-color: purple;
}

#conteudo{
   position: absolute;
   height: 200px;
   width: 400px;
   background-color: yellowgreen;
}

Ao usar position: absolute, você pode configurar outras duas propriedades:

left: 100px;
top: 200px;

TRANSFORM:

Serve para aplicar alguma alteração de tranformação em alguma caixa, tendo as seguintes variações:

- matrix()
- perspective(): alterar a perspectiva
- rotate(): rotacionar
- scale(): aumentar ou diminuir
- skew():
- translate(): mexe num determinado componente

Exemplo: Vai chegar 20px para direita e para baixo:

transform: translate(-50%, -50%);
-----------------------------------------------------

DECLARAÇÃO de VARIÁVEL:

Abaixo foram criadas variáveis para tipos de fontes:

:root{
    --font1: Verdana, Geneva, Tahoma, sans-serif;
    --font2: 'Passion One', cursive;
    --font3: 'Sriracha', cursive;
}

Sua aplicação ficaria da seguinte forma:

body{
    font-family: var(--font1);
}

Variáveis também podem ser criadas para cores:

:root{
    --cor1: ...;
    --cor2: ...;
    --cor3: ...;
}

Sua aplicação ficaria da seguinte forma:

body{
    background-color: var(--cor1);
}

Para alterar o texto do site de forma que o seu tamanho apresente responsividade, deve-se usar:

font-size: 10vw;

Assim, o texto será sempre 10% da largura da janela.
-----------------------------------------------------

EFEITO PARALAX:

Deve-se definir um id="" no HTML correspondente a section do CSS, onde irá ser adicionada a imagem.

Criar a section abaixo:

section#img1{

background-image: url("../imagens/background001.jpg");
background-position: right center;
background-size: cover;
}

Assim que as imagens estiverem posicionadas corretamente, poderá aplicar o efeito paralax:

section.imagem{
    background-size: cover;
    background-attachment: fixed;
}

SOMBRA INTERNA:

section.imagem{

box-shadow: inset 6px 6px 13px 0px rgba(0, 0, 0, 0.473);
}
-----------------------------------------------------

HIERARQUIA de TABELAS:

Table: <table>
Table Row: <tr> linha de tabela
Table Data: <td> dados de tabela

table{
    width: 400px;
    border-collapse: collapse;
}

tr{
    background-color: grey;
}

td{
    border: 1px solid black;
    padding: 8px;
}
-----------------------------------------------------